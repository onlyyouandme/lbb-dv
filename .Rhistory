theme(legend.position = "none")
scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text))+
geom_bar(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text))+
geom_area(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration))+
geom_area(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration))+
geom_freqpoly(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot)%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot)%>%
config(displayModeBar = F)
table(bankm$month)
bankm <- bankm %>%
mutate(
month_code = case_when(
str_detect(month, pattern = "jan")~1,
str_detect(month, pattern = "feb")~2,
str_detect(month, pattern = "mar")~3,
str_detect(month, pattern = "apr")~4,
str_detect(month, pattern = "may")~5,
str_detect(month, pattern = "jun")~6,
str_detect(month, pattern = "jul")~7,
str_detect(month, pattern = "aug")~8,
str_detect(month, pattern = "sep")~9,
str_detect(month, pattern = "oct")~10,
str_detect(month, pattern = "nov")~11,
str_detect(month, pattern = "dec")~12
)
)
bankm <- bankm %>%
mutate(
month_code = as.factor(month_code)
)
duration_job <- bankm %>%
select(job, month, duration, default) %>%
filter(job=="management") %>%
group_by(month, job, default) %>%
summarise(duration = mean(duration)) %>%
arrange(desc(duration)) %>%
ungroup() %>%
mutate(text = paste(job))
names(duration_job)
duration_job
table(bankm$month)
bankm <- bankm %>%
mutate(
month_code = case_when(
str_detect(month, pattern = "jan")~1,
str_detect(month, pattern = "feb")~2,
str_detect(month, pattern = "mar")~3,
str_detect(month, pattern = "apr")~4,
str_detect(month, pattern = "may")~5,
str_detect(month, pattern = "jun")~6,
str_detect(month, pattern = "jul")~7,
str_detect(month, pattern = "aug")~8,
str_detect(month, pattern = "sep")~9,
str_detect(month, pattern = "oct")~10,
str_detect(month, pattern = "nov")~11,
str_detect(month, pattern = "dec")~12
)
)
bankm <- bankm %>%
mutate(
month_code = as.factor(month_code)
)
duration_job <- bankm %>%
select(job, month, duration, default) %>%
filter(job=="management") %>%
group_by(month, job, default, duration) %>%
summarise(duration = mean(duration)) %>%
arrange(desc(duration)) %>%
ungroup() %>%
mutate(text = paste(job))
names(duration_job)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text)+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
scale_y_continuous(breaks = seq(0, 30000, 60000))
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text)+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text")%>%
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text1))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text1")%>%
config(displayModeBar = F)
table(bankm$month)
bankm <- bankm %>%
mutate(
month_code = case_when(
str_detect(month, pattern = "jan")~1,
str_detect(month, pattern = "feb")~2,
str_detect(month, pattern = "mar")~3,
str_detect(month, pattern = "apr")~4,
str_detect(month, pattern = "may")~5,
str_detect(month, pattern = "jun")~6,
str_detect(month, pattern = "jul")~7,
str_detect(month, pattern = "aug")~8,
str_detect(month, pattern = "sep")~9,
str_detect(month, pattern = "oct")~10,
str_detect(month, pattern = "nov")~11,
str_detect(month, pattern = "dec")~12
)
)
bankm <- bankm %>%
mutate(
month_code = as.factor(month_code)
)
duration_job <- bankm %>%
select(job, month, duration, default) %>%
filter(job=="management") %>%
group_by(month, job, default, duration) %>%
summarise(duration = mean(duration)) %>%
arrange(desc(duration)) %>%
ungroup() %>%
mutate(text1 = paste(job))
names(duration_job)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text1))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text1")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text1))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text1")%>%
config(displayModeBar = F)
duration_job <- bankm %>%
select(job, month, duration, default) %>%
filter(job=="management") %>%
group_by(month, job, default, duration) %>%
summarise(duration = mean(duration)) %>%
arrange(desc(duration)) %>%
ungroup() %>%
mutate(text1 = paste(job))
duration_job <- bankm %>%
select(job, month, duration, default) %>%
filter(job=="management") %>%
group_by(month, job, default, duration) %>%
summarise(duration = mean(duration)) %>%
arrange(desc(duration)) %>%
ungroup() %>%
mutate(text1 = paste(job))
duration_job
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text1")%>%
config(displayModeBar = F)
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text1")%>%
config(displayModeBar = F)
table(bankm$month)
bankm <- bankm %>%
mutate(
month_code = case_when(
str_detect(month, pattern = "jan")~1,
str_detect(month, pattern = "feb")~2,
str_detect(month, pattern = "mar")~3,
str_detect(month, pattern = "apr")~4,
str_detect(month, pattern = "may")~5,
str_detect(month, pattern = "jun")~6,
str_detect(month, pattern = "jul")~7,
str_detect(month, pattern = "aug")~8,
str_detect(month, pattern = "sep")~9,
str_detect(month, pattern = "oct")~10,
str_detect(month, pattern = "nov")~11,
str_detect(month, pattern = "dec")~12
)
)
bankm <- bankm %>%
mutate(
month_code = as.factor(month_code)
)
duration_job <- bankm %>%
select(job, month, duration, default) %>%
filter(job=="management") %>%
group_by(month, job, default, duration) %>%
summarise(duration = mean(duration)) %>%
arrange(desc(duration)) %>%
ungroup() %>%
mutate(text1 = paste(job,";",month))
names(duration_job)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text1")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = "text1"))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text1")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text1))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text1")%>%
config(displayModeBar = F)
library(shiny)
library(shinydashboard)
library(tidyverse)
library(plotly)
library(scales)
library(lubridate)
library(ggplot2)
library(lubridate)
bankm <- read.table("A:/OneDrive - uk elcass/Algoritma/3rd-Project(Bank Marketing)/data/bank-full.csv",
header = TRUE,
sep = ";",
stringsAsFactors = FALSE)
bankm <- bankm %>%
mutate_if(is.integer, as.numeric) %>%
mutate(
job = as.factor(job),
default = as.factor(default),
marital = as.factor(marital),
education = as.factor(education),
housing = as.factor(housing),
loan = as.factor(loan),
contact = as.factor(contact),
y = as.factor(y),
month = as.factor(month),
age = as.character(age),
)
glimpse(bankm)
table(bankm$month)
bankm <- bankm %>%
mutate(
age_grouping = case_when(
str_detect(age, pattern = "18|19|20|21|22|23|24|25")~"Teen(18-25)",
str_detect(age, pattern = "26|27|28|29|30|31|32|33|34|35")~"Early Adult(26-35)",
str_detect(age, pattern = "36|37|38|39|40|41|42|43|44|45")~"Lately Adult(36-45)",
str_detect(age, pattern = "46|47|48|49|50|51|52|53|54|55")~"Early Mature(46-55)",
str_detect(age, pattern = "56|57|58|59|60|61|62|63|64|65")~"Lately Mature(56-65)",
str_detect(age, pattern = "66|67|68|69|70|71|72|73|74|75|76|77|78|79|80|81|82|83|84|85|86|87|88|89|90|91|92|93|94|95")~"Old Age(>65)"
)
)
balancex <- bankm %>%
select(age_grouping, job, balance) %>%
filter(balance >= 1) %>%
arrange(desc(balance)) %>%
group_by(age_grouping, job) %>%
summarise(balance_mean = mean(balance)) %>%
ungroup() %>%
arrange(desc(balance_mean)) %>%
mutate(text = paste(age_grouping,":",round(balance_mean,2),"$"))
plot_balance <- ggplot(balancex, aes(x = balance_mean, y = job, text = text))+
geom_col(aes(fill = age_grouping))+
labs(x = "Job", y = "Balance",title = "Total Balance of Job based on Age Grouping")+
theme(legend.position = "none")+
scale_x_continuous(labels = unit_format(unit = "$"))
ggplotly(plot_balance, tooltip = "text") %>%
config(displayModeBar = F)
table(bankm$month)
bankm <- bankm %>%
mutate(
month_code = case_when(
str_detect(month, pattern = "jan")~1,
str_detect(month, pattern = "feb")~2,
str_detect(month, pattern = "mar")~3,
str_detect(month, pattern = "apr")~4,
str_detect(month, pattern = "may")~5,
str_detect(month, pattern = "jun")~6,
str_detect(month, pattern = "jul")~7,
str_detect(month, pattern = "aug")~8,
str_detect(month, pattern = "sep")~9,
str_detect(month, pattern = "oct")~10,
str_detect(month, pattern = "nov")~11,
str_detect(month, pattern = "dec")~12
)
)
bankm <- bankm %>%
mutate(
month_code = as.factor(month_code)
)
duration_job <- bankm %>%
select(job, month, duration, default) %>%
filter(job=="management") %>%
group_by(month, job, default, duration) %>%
summarise(duration = mean(duration)) %>%
arrange(desc(duration)) %>%
ungroup() %>%
mutate(text1 = paste(job,";",month))
names(duration_job)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text1))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text1")%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration, text = text1))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot)%>%
config(displayModeBar = F)
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
# scale_y_continuous(breaks = seq(0, 30000, 60000))
ggplotly(duration_job_plot, tooltip = "text1")%>%
config(displayModeBar = F)
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
duration_job <- bankm %>%
select(job, month, duration, default) %>%
filter(job=="management") %>%
group_by(month, job, default, duration) %>%
summarise(duration = mean(duration)) %>%
arrange(desc(duration)) %>%
ungroup() %>%
mutate(text1 = paste(job,";",month))
duration_job_plot <- ggplot(bankm, aes(x = month_code, y = duration))+
geom_point(aes(color=default))+
geom_line(aes(color=default))+
facet_wrap(~default, ncol=2, scales = "free")+
labs(x = "Number of Month", y = "Call Duration (s)", title = "Duration of called based on Job")+
theme(legend.position = "none")
duration_job_plot
runApp('Bank_Shiny')
duration_job <- bankm %>%
select(job, month, duration, default) %>%
filter(job==input$selecCat) %>%
group_by(month, job, default, duration) %>%
summarise(duration = mean(duration)) %>%
arrange(desc(duration)) %>%
ungroup() %>%
mutate(text1 = paste(job,";",month))
runApp('Bank_Shiny')
runApp('Bank_Shiny')
shiny::runApp('Bank_Shiny')
runApp('Bank_Shiny')
bankm <- read.table("data/bank-full.csv",
header = TRUE,
sep = ";",
stringsAsFactors = FALSE)
bankm
shiny::runApp('Bank_Shiny')
runApp('Bank_Shiny')
runApp('Bank_Shiny')
bankm
runApp('Bank_Shiny')
setwd("A:/OneDrive - uk elcass/Algoritma/3rd-Project(Bank Marketing)/Bank_Shiny")
runApp()
runApp()
runApp()
runApp()
bankm <- read_csv("bank-full.csv"
# ,
#            header = TRUE,
#            sep = ";",
#            stringsAsFactors = FALSE
)
bankm <- read_csv("bank-full.csv"
,
header = TRUE,
sep = ";",
stringsAsFactors = FALSE
)
bankm <- read.table("bank-full.csv"
,
header = TRUE,
sep = ";",
stringsAsFactors = FALSE
)
